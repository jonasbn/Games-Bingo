Known BUGS in Games::Bingo (and issues)

$Id: BUGS,v 1.18 2003/12/27 10:27:16 jonasbn Exp $

Alpha

-  Plate.pm line 120 dies once in a while because the handling of the 
   collection is not working as expected.

   my $number = $c->get_number();

   FIXED
	
-  The sort of the column does apparently not work or maybe I use it the 
   wrong way
    
   FIXED
 
-  The plate population algoritm seems to have a flaw in that sense that if 
   we end up with a situation where we have to populate the last row with 
   two numbers from the same series, the plate will lack a number or two.
    
   FIXED (work-around implemented)

0.01

-  Long lines in the text files (README, INSTALL etc) should probably be 
   wrapped down to 72 chars or so, to increase readability.
    
   [cpan #2552] <URL: http://rt.cpan.org/NoAuth/Bug.html?id=2552 >
    
   FIXED
 
-  http://rt.cpan.org and bug-Games-Bingo@rt.cpan.org should be mentioned as
   bug reporting interface.

   [cpan #2553] <URL: http://rt.cpan.org/NoAuth/Bug.html?id=2553 >

   DONE
    
-  The modules have no abstract (In NAME, one usually puts 
   "Module::Name - Module that does something)
 	
   DONE
 
-  Prototypes should be removed
 
   Prototypes are used for methods. That's useless, since they're ignored for 
   runtime thingies. Besides that, have a look at: 
   "Far More Than Everything You've Ever Wanted to Know about Prototypes in Perl"
    
    <http://www.perl.com/pub/a/language/misc/fmproto.html >
    
   DONE
   
-  Some POD is broken otherwise (if you use multiple angle brackets, you must 
   also use whitespace!)

   CLEANED OUT
    
-  Games::Bingo::Print POD is not browsable at CPAN, it is broken.
 
   *** ERROR: =over on line 172 without closing =back (at head2) at line 174 in file 
   lib/Games/Bingo/Print.pm

   FIXED

0.02

-  POD is =cut and then immediately continued... (from Juerd use.perl.org)
 
0.03
 
-  Games::Bingo::Print POD is not browsable at CPAN, it is still broken.
 
   FIXED

0.04

- No known bugs

0.05

- No known bugs

0.06

- t/Cover.t breaks, t/Cover.t contains no Test::Harness compatible tests, but 
  since the coverage test is still experimental I will remove t/Cover.t

  [cpan #3414] <URL: http://rt.cpan.org/NoAuth/Bug.html?id=3114 >
   
  FIXED

0.07

- Error reported in bingo.pl, apparently the game stops a number too early, 
  meaning only 89 numbers are drawn instead of 90.

  [cpan #3271] <URL: http://rt.cpan.org/NoAuth/Bug.html?id=3271 >
  
  PATCHED

- Errors in the README file 

  [cpan #3273] <URL: http://rt.cpan.org/NoAuth/Bug.html?id=3273 >

  PATCHED

0.08

- Problem with generating ASCII plates (this problem might have existed
  before). But it seems as if I am loosing some numbers during the card
  generation.
  
  Example, see first row:

  +--+--+--+--+--+--+--+--+--+
  |  |  |23|  |49|  |65|  |  |
  +--+--+--+--+--+--+--+--+--+
  | 8|  |  |  |  |57|69|77|  |
  +--+--+--+--+--+--+--+--+--+
  | 2|11|  |32|  |  |  |  |80|
  +--+--+--+--+--+--+--+--+--+
  
  See also: b/sort.t
  
  FIXED
  
- The number presentation does not handle the sorted numbers well.

  As you can see the first column is ok whereas the fifth not ok.
  
  inserting number 71 into column 7 at row 2
  inserting number 51 into column 5 at row 2
  inserting number 24 into column 2 at row 2
  inserting number 40 into column 4 at row 2
  inserting number 19 into column 1 at row 1
  inserting number 63 into column 6 at row 1
  inserting number 8 into column 0 at row 1
  inserting number 35 into column 3 at row 1
  inserting number 6 into column 0 at row 0
  inserting number 41 into column 4 at row 0
  inserting number 89 into column 8 at row 0
  inserting number 50 into column 5 at row 0
  success (12)
  +--+--+--+--+--+--+--+--+--+
  | 6|  |  |  |41|50|  |  |89|
  +--+--+--+--+--+--+--+--+--+
  | 8|19|  |35|  |  |63|  |  |
  +--+--+--+--+--+--+--+--+--+
  |  |  |24|  |40|51|  |71|  |
  +--+--+--+--+--+--+--+--+--+

  See also: b/short.t
  
  FIXED
  
- Problem with the numbers generated versus the numbers printed. Sometimes
  the printed card does not correspond with the one generated. Apperently
  this has to do with the blessing of the objects and therefore the
  Games::Bingo card should be rewritten so that the object can be reused.
  
  Example:
  
  Games::Bingo::Card=ARRAY(0x1836130)
  Games::Bingo::Card=ARRAY(0x1801180)
  
  See also b/bless.t
  
  FIXED
